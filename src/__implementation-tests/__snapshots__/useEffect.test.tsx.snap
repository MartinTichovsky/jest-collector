// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`useEffect Component with one useEffect and unregistered component 1`] = `
Object {
  "useEffect": Array [
    Object {
      "action": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "deps": Array [],
    },
  ],
}
`;

exports[`useEffect Default - Component with one useEffect 1`] = `
Array [
  Object {
    "useEffect": Array [
      Object {
        "action": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "deps": Array [],
      },
    ],
  },
]
`;

exports[`useEffect Default - Component with one useEffect 2`] = `
Object {
  "call": Array [
    Object {
      "args": Arguments [
        Object {
          "callFunc": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
        },
        Object {},
      ],
      "hooks": Object {
        "useEffect": Array [
          Object {
            "action": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "deps": Array [],
          },
        ],
      },
      "result": <div>
        Some content
      </div>,
    },
  ],
  "dataTestId": undefined,
  "jestFn": [MockFunction] {
    "calls": Array [
      Array [
        Arguments [
          Object {
            "callFunc": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
          },
          Object {},
        ],
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": <div>
          Some content
        </div>,
      },
    ],
  },
  "relativePath": "/src/__implementation-tests/registered/UseEffect.tsx",
}
`;

exports[`useEffect Default with test id - Component with one useEffect 1`] = `
Array [
  Object {
    "useEffect": Array [
      Object {
        "action": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "deps": Array [],
      },
    ],
  },
]
`;

exports[`useEffect Default with test id - Component with one useEffect 2`] = `
Object {
  "call": Array [
    Object {
      "args": Arguments [
        Object {
          "callFunc": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "data-testid": "test-id",
        },
        Object {},
      ],
      "hooks": Object {
        "useEffect": Array [
          Object {
            "action": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "deps": Array [],
          },
        ],
      },
      "result": <div>
        Some content
      </div>,
    },
  ],
  "dataTestId": "test-id",
  "jestFn": [MockFunction] {
    "calls": Array [
      Array [
        Arguments [
          Object {
            "callFunc": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
          },
          Object {},
        ],
      ],
      Array [
        Arguments [
          Object {
            "callFunc": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "data-testid": "test-id",
          },
          Object {},
        ],
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": <div>
          Some content
        </div>,
      },
      Object {
        "type": "return",
        "value": <div>
          Some content
        </div>,
      },
    ],
  },
  "relativePath": "/src/__implementation-tests/registered/UseEffect.tsx",
}
`;

exports[`useEffect Deps in registered component 1`] = `
Array [
  Object {
    "useEffect": Array [
      Object {
        "action": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "deps": Array [
          1,
          Object {
            "property": "some",
          },
          "Text",
          false,
        ],
      },
    ],
  },
]
`;

exports[`useEffect Deps in unregistered component 1`] = `undefined`;

exports[`useEffect Unmount registered component 1`] = `
Array [
  Object {
    "useEffect": Array [
      Object {
        "action": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": [MockFunction],
            },
          ],
        },
        "deps": Array [],
        "unmountAction": [MockFunction],
      },
    ],
  },
]
`;

exports[`useEffect Unmount unregistered component 1`] = `
Object {
  "useEffect": Array [
    Object {
      "action": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": [MockFunction],
          },
        ],
      },
      "deps": Array [],
      "unmountAction": [MockFunction],
    },
  ],
}
`;

exports[`useEffect Unregistered with two effect 1`] = `
Object {
  "useEffect": Array [
    Object {
      "action": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "deps": Array [],
    },
    Object {
      "action": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "deps": Array [],
    },
  ],
}
`;
