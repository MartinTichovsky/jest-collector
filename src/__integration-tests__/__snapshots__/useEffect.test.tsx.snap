// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UseEffect Default - Component with one useEffect 1`] = `
{
  "useEffect": [
    {
      "action": [MockFunction] {
        "calls": [
          [],
        ],
        "results": [
          {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "deps": [],
    },
  ],
}
`;

exports[`UseEffect Default - Component with one useEffect 2`] = `
{
  "calls": [
    {
      "args": [
        {
          "callFunc": [MockFunction] {
            "calls": [
              [],
            ],
            "results": [
              {
                "type": "return",
                "value": undefined,
              },
            ],
          },
        },
        {},
      ],
      "result": <div>
        Some content
      </div>,
    },
  ],
  "current": {
    "dataTestId": null,
    "name": "OneUseEffect",
    "nthChild": undefined,
    "originMock": true,
    "relativePath": "/src/__integration-tests__/components/UseEffect.tsx",
  },
  "hooks": {
    "useEffect": [
      {
        "action": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "deps": [],
      },
    ],
  },
  "jestFn": [MockFunction] {
    "calls": [
      [
        {
          "callFunc": [MockFunction] {
            "calls": [
              [],
            ],
            "results": [
              {
                "type": "return",
                "value": undefined,
              },
            ],
          },
        },
        {},
      ],
    ],
    "results": [
      {
        "type": "return",
        "value": <div>
          Some content
        </div>,
      },
    ],
  },
  "parent": null,
}
`;

exports[`UseEffect Default with test id - Component with one useEffect 1`] = `
{
  "useEffect": [
    {
      "action": [MockFunction] {
        "calls": [
          [],
        ],
        "results": [
          {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "deps": [],
    },
  ],
}
`;

exports[`UseEffect Default with test id - Component with one useEffect 2`] = `
{
  "calls": [
    {
      "args": [
        {
          "callFunc": [MockFunction] {
            "calls": [
              [],
            ],
            "results": [
              {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "data-testid": "test-id",
        },
        {},
      ],
      "result": <div>
        Some content
      </div>,
    },
  ],
  "current": {
    "dataTestId": "test-id",
    "name": "OneUseEffect",
    "nthChild": undefined,
    "originMock": true,
    "relativePath": "/src/__integration-tests__/components/UseEffect.tsx",
  },
  "hooks": {
    "useEffect": [
      {
        "action": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "deps": [],
      },
    ],
  },
  "jestFn": [MockFunction] {
    "calls": [
      [
        {
          "callFunc": [MockFunction] {
            "calls": [
              [],
            ],
            "results": [
              {
                "type": "return",
                "value": undefined,
              },
            ],
          },
        },
        {},
      ],
      [
        {
          "callFunc": [MockFunction] {
            "calls": [
              [],
            ],
            "results": [
              {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "data-testid": "test-id",
        },
        {},
      ],
    ],
    "results": [
      {
        "type": "return",
        "value": <div>
          Some content
        </div>,
      },
      {
        "type": "return",
        "value": <div>
          Some content
        </div>,
      },
    ],
  },
  "parent": null,
}
`;

exports[`UseEffect Deps in the component 1`] = `
{
  "calls": [
    {
      "args": [
        {
          "deps": [
            1,
            {
              "property": "some",
            },
            "Text",
            false,
          ],
        },
        {},
      ],
      "result": <div>
        Registered with deps
      </div>,
    },
  ],
  "current": {
    "dataTestId": null,
    "name": "WithDeps",
    "nthChild": undefined,
    "originMock": true,
    "relativePath": "/src/__integration-tests__/components/UseEffect.tsx",
  },
  "hooks": {
    "useEffect": [
      {
        "action": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "deps": [
          1,
          {
            "property": "some",
          },
          "Text",
          false,
        ],
      },
    ],
  },
  "jestFn": [MockFunction] {
    "calls": [
      [
        {
          "deps": [
            1,
            {
              "property": "some",
            },
            "Text",
            false,
          ],
        },
        {},
      ],
    ],
    "results": [
      {
        "type": "return",
        "value": <div>
          Registered with deps
        </div>,
      },
    ],
  },
  "parent": null,
}
`;

exports[`UseEffect Unmount registered component 1`] = `
{
  "calls": [
    {
      "args": [
        {},
        {},
      ],
      "result": <div>
        Registered with unmount
      </div>,
    },
  ],
  "current": {
    "dataTestId": null,
    "name": "WithUmount",
    "nthChild": undefined,
    "originMock": true,
    "relativePath": "/src/__integration-tests__/components/UseEffect.tsx",
  },
  "hooks": {
    "useEffect": [
      {
        "action": [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": [MockFunction],
            },
          ],
        },
        "deps": [],
        "unmount": [MockFunction],
      },
    ],
  },
  "jestFn": [MockFunction] {
    "calls": [
      [
        {},
        {},
      ],
    ],
    "results": [
      {
        "type": "return",
        "value": <div>
          Registered with unmount
        </div>,
      },
    ],
  },
  "parent": null,
}
`;
